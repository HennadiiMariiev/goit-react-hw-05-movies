{"version":3,"sources":["components/utils/api.js","components/Reviews/Reviews.module.scss","components/Reviews/Reviews.jsx"],"names":["axios","require","API_KEY","BASE_URL","fetchTrendingMovies","a","get","then","res","data","results","catch","err","console","log","fetchMovieByKeyword","query","fetchSingleMovie","movieId","fetchMovieCredits","fetchMovieReviews","module","exports","Reviews","useRouteMatch","url","replace","useState","movieReviews","setMovieReviews","useEffect","api","movie","length","className","styles","reviewsList","map","el","index","reviewsItem","author","created_at","content"],"mappings":"gVAAMA,EAAQC,EAAQ,IAGhBC,EAAU,mCACVC,EAAQ,+BAEP,SAAeC,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EACEL,EACJM,IADI,UACGH,EADH,uCAC0CD,IAC9CK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,WACvBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,UAAWF,OAJpC,4C,sBAOA,SAASG,EAAoBC,GAClC,OAAOhB,EACJM,IADI,UACGH,EADH,+BACkCa,EADlC,iBAZI,EAYJ,oBACgEd,IACpEK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,WACvBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,UAAWF,MAGpC,SAASK,EAAiBC,GAC/B,OAAOlB,EACJM,IADI,UACGH,EADH,kBACqBe,EADrB,kBAnBI,EAmBJ,oBACsDhB,IAC1DK,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,UAAWF,MAGpC,SAASO,EAAkBD,GAChC,OAAOlB,EACJM,IADI,UACGH,EADH,kBACqBe,EADrB,0BA1BI,EA0BJ,oBAC8DhB,IAClEK,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,UAAWF,MAGpC,SAASQ,EAAkBF,GAChC,OAAOlB,EACJM,IADI,UACGH,EADH,kBACqBe,EADrB,0BAjCI,EAiCJ,oBAC8DhB,IAClEK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,WACvBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,UAAWF,Q,mBCrC3CS,EAAOC,QAAU,CAAC,YAAc,6BAA6B,YAAc,+B,0ICK5D,SAASC,IACtB,IACML,EADUM,cAARC,IACYC,QAAQ,UAAW,IAAIA,QAAQ,WAAY,IAC/D,EAAwCC,mBAAS,MAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACHZ,GAAuB,aAAZA,GAEhBa,IAAsBb,GAASX,MAAK,SAACyB,GAAD,OAAWH,EAAgBG,QAC9D,CAACd,IAEJ,IAAgCc,EAmBhC,OACE,gCACE,yCACCJ,IAtB2BI,EAsBYJ,EArBnCI,EAAMC,OACX,oBAAIC,UAAWC,IAAOC,YAAtB,SACGJ,EAAMK,KAAI,SAACC,EAAIC,GACd,OACE,qBAAgBL,UAAWC,IAAOK,YAAlC,UACG,IACD,6BAAKF,EAAGG,SACR,6BAAKH,EAAGI,aACR,4BAAIJ,EAAGK,YAJAJ,QAUf","file":"static/js/9.d49d1c4d.chunk.js","sourcesContent":["const axios = require('axios');\n\nconst page = 1;\nconst API_KEY = '215f5d86f7e87809998cffae9d163253';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport async function fetchTrendingMovies() {\n  return axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then((res) => res.data.results)\n    .catch((err) => console.log('Error: ', err));\n}\n\nexport function fetchMovieByKeyword(query) {\n  return axios\n    .get(`${BASE_URL}/search/movie?query=${query}&page=${page}&api_key=${API_KEY}`)\n    .then((res) => res.data.results)\n    .catch((err) => console.log('Error: ', err));\n}\n\nexport function fetchSingleMovie(movieId) {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}?&page=${page}&api_key=${API_KEY}`)\n    .then((res) => res.data)\n    .catch((err) => console.log('Error: ', err));\n}\n\nexport function fetchMovieCredits(movieId) {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}/credits?&page=${page}&api_key=${API_KEY}`)\n    .then((res) => res.data)\n    .catch((err) => console.log('Error: ', err));\n}\n\nexport function fetchMovieReviews(movieId) {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}/reviews?&page=${page}&api_key=${API_KEY}`)\n    .then((res) => res.data.results)\n    .catch((err) => console.log('Error: ', err));\n}\n\n//#region TOOLTIPS\n// #trending             GET `/trending/movie/day`\n// #search               GET `/search/movie?query=${query}&page=${page}`\n// #search-movie         GET `/movie/{movie_id}`\n// #credits              GET `/movie/{movie_id}/credits`\n// #reviews              GET `/movie/{movie_id}/reviews`\n\n// fetchTrendingMovies();\n// fetchMovieByKeyword('spiderman');\n// fetchSingleMovie(movieId);\n// fetchMovieCredits(movieId);\n// fetchMovieReviews(movieId);\n//#endregion\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviewsList\":\"Reviews_reviewsList__1XT3d\",\"reviewsItem\":\"Reviews_reviewsItem__2xPvp\"};","import { useEffect, useState } from 'react/cjs/react.development';\nimport { useRouteMatch } from 'react-router';\nimport * as api from '../utils/api';\n\nimport styles from './Reviews.module.scss';\n\nexport default function Reviews() {\n  const { url } = useRouteMatch();\n  const movieId = url.replace('/movies', '').replace('/reviews', '');\n  const [movieReviews, setMovieReviews] = useState(null);\n\n  useEffect(() => {\n    if (!movieId || movieId === ':movieId') return;\n\n    api.fetchMovieReviews(movieId).then((movie) => setMovieReviews(movie));\n  }, [movieId]);\n\n  const makeMovieReviewsMarkUp = (movie) => {\n    return movie.length ? (\n      <ul className={styles.reviewsList}>\n        {movie.map((el, index) => {\n          return (\n            <li key={index} className={styles.reviewsItem}>\n              {' '}\n              <h4>{el.author}</h4>\n              <h5>{el.created_at}</h5>\n              <p>{el.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    ) : (\n      <h3>No reviews on this movie</h3>\n    );\n  };\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {movieReviews && makeMovieReviewsMarkUp(movieReviews)}\n    </div>\n  );\n}\n"],"sourceRoot":""}