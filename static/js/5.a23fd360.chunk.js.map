{"version":3,"sources":["components/MoviesPage/MoviesPage.module.scss","components/MoviesPage/MoviesPage.jsx"],"names":["module","exports","MoviePage","useState","searchedMovies","setSearchedMovies","searchQuery","setSearchQuery","query","setQuery","url","useRouteMatch","useEffect","api","then","movies","className","styles","box","onSubmit","event","preventDefault","type","placeholder","value","onChange","e","target","disabled","trim","map","movie","index","to","id","title","release_date","src","backdrop_path","alt","width","height","overview"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,IAAM,0B,gJCIT,SAASC,IACtB,MAA4CC,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACQC,EAAQC,cAARD,IAERE,qBAAU,WACHJ,GAELK,IAAwBL,GAAOM,MAAK,SAACC,GAAD,OAAYV,EAAkBU,QACjE,CAACP,IAEJ,IAM0BO,EAiB1B,OACE,sBAAKC,UAAWC,IAAOC,IAAvB,UACE,+CACA,uBAAMC,SA1BU,SAACC,GACnBA,EAAMC,iBAENZ,EAASH,IAuBP,UACE,uBACEgB,KAAK,OACLC,YAAY,iBACZC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAOnB,EAAemB,EAAEC,OAAOH,UAE3C,wBAAQF,KAAK,SAASM,SAAiC,KAAvBtB,EAAYuB,OAA5C,uBAIF,6BAAKzB,IA/BiBW,EA+BkBX,EA9B1CW,EAAOe,KAAI,SAACC,EAAOC,GAAR,OACT,+BACE,eAAC,IAAD,CAAMC,GAAE,UAAKvB,EAAL,YAAYqB,EAAMG,IAA1B,UACE,6BAAKH,EAAMI,QACX,6BAAKJ,EAAMK,eACX,qBACEC,IAAG,0CAAqCN,EAAMO,eAC9CC,IAAKR,EAAMI,MACXK,MAAM,MACNC,OAAO,WAGX,4BAAIV,EAAMW,aAXHV,SA8BR5B,GAAkBI,GAAS","file":"static/js/5.a23fd360.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"MoviesPage_box__1Neam\"};","import { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport * as api from '../utils/api';\nimport styles from './MoviesPage.module.scss';\n\nexport default function MoviePage() {\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [query, setQuery] = useState('');\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    if (!query) return;\n\n    api.fetchMovieByKeyword(query).then((movies) => setSearchedMovies(movies));\n  }, [query]);\n\n  const searchMovie = (event) => {\n    event.preventDefault();\n\n    setQuery(searchQuery);\n  };\n\n  const makeMoviesMarkUp = (movies) =>\n    movies.map((movie, index) => (\n      <li key={index}>\n        <Link to={`${url}/${movie.id}`}>\n          <h3>{movie.title}</h3>\n          <h4>{movie.release_date}</h4>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`}\n            alt={movie.title}\n            width=\"300\"\n            height=\"250\"\n          />\n        </Link>\n        <p>{movie.overview}</p>\n      </li>\n    ));\n\n  return (\n    <div className={styles.box}>\n      <h2>Search movies</h2>\n      <form onSubmit={searchMovie}>\n        <input\n          type=\"text\"\n          placeholder=\"Search film...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        ></input>\n        <button type=\"submit\" disabled={searchQuery.trim() === ''}>\n          Search\n        </button>\n      </form>\n      <ul>{searchedMovies && makeMoviesMarkUp(searchedMovies)}</ul>\n      {searchedMovies && query && <h3>No movies on your query</h3>}\n    </div>\n  );\n}\n"],"sourceRoot":""}