{"version":3,"sources":["components/utils/api.js","components/MoviesPage/MoviesPage.module.scss","components/MoviesPage/MoviesPage.jsx"],"names":["axios","require","API_KEY","BASE_URL","fetchTrendingMovies","a","get","then","res","data","results","catch","err","console","log","fetchMovieByKeyword","query","fetchSingleMovie","movieId","fetchMovieCredits","fetchMovieReviews","module","exports","MoviePage","useState","searchedMovies","setSearchedMovies","searchQuery","setSearchQuery","setQuery","url","useRouteMatch","useEffect","api","movies","className","styles","box","onSubmit","event","preventDefault","type","placeholder","value","onChange","e","target","disabled","trim","map","movie","index","to","id","title","release_date","src","backdrop_path","alt","width","height","overview"],"mappings":"gVAAMA,EAAQC,EAAQ,IAGhBC,EAAU,mCACVC,EAAQ,+BAEP,SAAeC,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EACEL,EACJM,IADI,UACGH,EADH,uCAC0CD,IAC9CK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,WACvBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,UAAWF,OAJpC,4C,sBAOA,SAASG,EAAoBC,GAClC,OAAOhB,EACJM,IADI,UACGH,EADH,+BACkCa,EADlC,iBAZI,EAYJ,oBACgEd,IACpEK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,WACvBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,UAAWF,MAGpC,SAASK,EAAiBC,GAC/B,OAAOlB,EACJM,IADI,UACGH,EADH,kBACqBe,EADrB,kBAnBI,EAmBJ,oBACsDhB,IAC1DK,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,UAAWF,MAGpC,SAASO,EAAkBD,GAChC,OAAOlB,EACJM,IADI,UACGH,EADH,kBACqBe,EADrB,0BA1BI,EA0BJ,oBAC8DhB,IAClEK,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,UAAWF,MAGpC,SAASQ,EAAkBF,GAChC,OAAOlB,EACJM,IADI,UACGH,EADH,kBACqBe,EADrB,0BAjCI,EAiCJ,oBAC8DhB,IAClEK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,WACvBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,UAAWF,Q,mBCrC3CS,EAAOC,QAAU,CAAC,IAAM,0B,gJCIT,SAASC,IACtB,MAA4CC,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOR,EAAP,KAAca,EAAd,KACQC,EAAQC,cAARD,IAERE,qBAAU,WACHhB,GAELiB,IAAwBjB,GAAOT,MAAK,SAAC2B,GAAD,OAAYR,EAAkBQ,QACjE,CAAClB,IAEJ,IAM0BkB,EAiB1B,OACE,sBAAKC,UAAWC,IAAOC,IAAvB,UACE,+CACA,uBAAMC,SA1BU,SAACC,GACnBA,EAAMC,iBAENX,EAASF,IAuBP,UACE,uBACEc,KAAK,OACLC,YAAY,iBACZC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAAOjB,EAAeiB,EAAEC,OAAOH,UAE3C,wBAAQF,KAAK,SAASM,SAAiC,KAAvBpB,EAAYqB,OAA5C,uBAIF,6BAAKvB,IA/BiBS,EA+BkBT,EA9B1CS,EAAOe,KAAI,SAACC,EAAOC,GAAR,OACT,+BACE,eAAC,IAAD,CAAMC,GAAE,UAAKtB,EAAL,YAAYoB,EAAMG,IAA1B,UACE,6BAAKH,EAAMI,QACX,6BAAKJ,EAAMK,eACX,qBACEC,IAAG,0CAAqCN,EAAMO,eAC9CC,IAAKR,EAAMI,MACXK,MAAM,MACNC,OAAO,WAGX,4BAAIV,EAAMW,aAXHV,SA8BR1B,GAAkBT,GAAS","file":"static/js/8.f586e272.chunk.js","sourcesContent":["const axios = require('axios');\n\nconst page = 1;\nconst API_KEY = '215f5d86f7e87809998cffae9d163253';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport async function fetchTrendingMovies() {\n  return axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then((res) => res.data.results)\n    .catch((err) => console.log('Error: ', err));\n}\n\nexport function fetchMovieByKeyword(query) {\n  return axios\n    .get(`${BASE_URL}/search/movie?query=${query}&page=${page}&api_key=${API_KEY}`)\n    .then((res) => res.data.results)\n    .catch((err) => console.log('Error: ', err));\n}\n\nexport function fetchSingleMovie(movieId) {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}?&page=${page}&api_key=${API_KEY}`)\n    .then((res) => res.data)\n    .catch((err) => console.log('Error: ', err));\n}\n\nexport function fetchMovieCredits(movieId) {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}/credits?&page=${page}&api_key=${API_KEY}`)\n    .then((res) => res.data)\n    .catch((err) => console.log('Error: ', err));\n}\n\nexport function fetchMovieReviews(movieId) {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}/reviews?&page=${page}&api_key=${API_KEY}`)\n    .then((res) => res.data.results)\n    .catch((err) => console.log('Error: ', err));\n}\n\n//#region TOOLTIPS\n// #trending             GET `/trending/movie/day`\n// #search               GET `/search/movie?query=${query}&page=${page}`\n// #search-movie         GET `/movie/{movie_id}`\n// #credits              GET `/movie/{movie_id}/credits`\n// #reviews              GET `/movie/{movie_id}/reviews`\n\n// fetchTrendingMovies();\n// fetchMovieByKeyword('spiderman');\n// fetchSingleMovie(movieId);\n// fetchMovieCredits(movieId);\n// fetchMovieReviews(movieId);\n//#endregion\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"MoviesPage_box__1Neam\"};","import { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport * as api from '../utils/api';\nimport styles from './MoviesPage.module.scss';\n\nexport default function MoviePage() {\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [query, setQuery] = useState('');\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    if (!query) return;\n\n    api.fetchMovieByKeyword(query).then((movies) => setSearchedMovies(movies));\n  }, [query]);\n\n  const searchMovie = (event) => {\n    event.preventDefault();\n\n    setQuery(searchQuery);\n  };\n\n  const makeMoviesMarkUp = (movies) =>\n    movies.map((movie, index) => (\n      <li key={index}>\n        <Link to={`${url}/${movie.id}`}>\n          <h3>{movie.title}</h3>\n          <h4>{movie.release_date}</h4>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`}\n            alt={movie.title}\n            width=\"300\"\n            height=\"250\"\n          />\n        </Link>\n        <p>{movie.overview}</p>\n      </li>\n    ));\n\n  return (\n    <div className={styles.box}>\n      <h2>Search movies</h2>\n      <form onSubmit={searchMovie}>\n        <input\n          type=\"text\"\n          placeholder=\"Search film...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        ></input>\n        <button type=\"submit\" disabled={searchQuery.trim() === ''}>\n          Search\n        </button>\n      </form>\n      <ul>{searchedMovies && makeMoviesMarkUp(searchedMovies)}</ul>\n      {searchedMovies && query && <h3>No movies on your query</h3>}\n    </div>\n  );\n}\n"],"sourceRoot":""}